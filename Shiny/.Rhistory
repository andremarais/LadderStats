BData.subset.passive <- BData.subset[which(BData.subset$Rune == "Passive"),]
t <- data.frame(t(table(BData.subset.active$Spell)))
t$Var1 <- NULL
colnames(t) <- (c("Spell", "Count"))
t$Count <- as.integer(t$Count)
t <- t[order(t$Count, decreasing = T),]
t <- t[1:25,]
p1 <- ggplot(t, aes(x=reorder(Spell, -Count), y= Count))+
geom_bar(stat = "identity", fill = bcol, col = "black")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
xlab("Spell")+
ylab("Frequency")
return(p1)
}
plot1(1,100,"Monk")
plot1(1,100,"WitchDoctor")
wdscv <- read.csv(paste("C:/Users/Veldrin/Documents/GitHub/LadderStats/Shiny/external/data/WitchDoctor.csv", sep=""))
plot1(1,100,"WitchDoctor")
plot1 <- function(GRF, GRT, Class){
if(Class == "Barbarian") {
bcol ="#DB3232"; BData <- bscv
} else if(Class == "Crusader") {
bcol ="#F2EEB1"; BData <- cscv
} else if(Class == "DemonHunter") {
bcol ="#B058AE"; BData <- dhscv
} else if(Class == "Monk") {
bcol ="#E3DE54"; BData <- mscv
} else if(Class == "WitchDoctor") {
bcol ="#279423"; BData <- wdscv
} else if(Class == "Wizard") {
;bcol ="#3BDCF5"; BData <- wscv
}
#BData <- read.csv(paste("external/data/",Class,".csv", sep=""))
BData.subset <- BData[c(GRF:(GRT*10)),]
BData.subset.active <- BData.subset[which(BData.subset$Rune != "Passive"),]
BData.subset.passive <- BData.subset[which(BData.subset$Rune == "Passive"),]
t <- data.frame(t(table(BData.subset.active$Spell)))
t$Var1 <- NULL
colnames(t) <- (c("Spell", "Count"))
t$Count <- as.integer(t$Count)
t <- t[order(t$Count, decreasing = T),]
t <- t[1:25,]
p1 <- ggplot(t, aes(x=reorder(Spell, -Count), y= Count))+
geom_bar(stat = "identity", fill = bcol, col = "black")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
xlab("Spell")+
ylab("Frequency")
return(p1)
}
plot1(1,100,"WitchDoctor")
shiny::runApp('GitHub/LadderStats/Shiny')
shiny::runApp('GitHub/LadderStats/Shiny')
shiny::runApp('GitHub/LadderStats/Shiny')
shiny::runApp('GitHub/LadderStats/Shiny')
shiny::runApp('GitHub/LadderStats/Shiny')
shiny::runApp('GitHub/LadderStats/Shiny')
# bscv <- read.csv(paste("external/data/Barbarian.csv", sep=""))
# cscv <- read.csv(paste("external/data/Crusader.csv", sep=""))
# dhscv <- read.csv(paste("external/data/DemonHunter.csv", sep=""))
# mscv <- read.csv(paste("external/data/Monk.csv", sep=""))
# wdscv <- read.csv(paste("external/data/WitchDoctor.csv", sep=""))
# wscv <- read.csv(paste("external/data/Wizard.csv", sep=""))
bscv <- read.csv(paste("C:/Users/Veldrin/Documents/GitHub/LadderStats/Shiny/external/data/Barbarian.csv", sep=""))
cscv <- read.csv(paste("C:/Users/Veldrin/Documents/GitHub/LadderStats/Shiny/external/data/Crusader.csv", sep=""))
dhscv <- read.csv(paste("C:/Users/Veldrin/Documents/GitHub/LadderStats/Shiny/external/data/DemonHunter.csv", sep=""))
mscv <- read.csv(paste("C:/Users/Veldrin/Documents/GitHub/LadderStats/Shiny/external/data/Monk.csv", sep=""))
wdscv <- read.csv(paste("C:/Users/Veldrin/Documents/GitHub/LadderStats/Shiny/external/data/WitchDoctor.csv", sep=""))
wscv <- read.csv(paste("C:/Users/Veldrin/Documents/GitHub/LadderStats/Shiny/external/data/Wizard.csv", sep=""))
plot1 <- function(GRF, GRT, Class){
if(Class == "Barbarian") {
bcol ="#DB3232"; BData <- bscv
} else if(Class == "Crusader") {
bcol ="#F2EEB1"; BData <- cscv
} else if(Class == "DemonHunter") {
bcol ="#B058AE"; BData <- dhscv
} else if(Class == "Monk") {
bcol ="#E3DE54"; BData <- mscv
} else if(Class == "WitchDoctor") {
bcol ="#279423"; BData <- wdscv
} else if(Class == "Wizard") {
;bcol ="#3BDCF5"; BData <- wscv
}
#BData <- read.csv(paste("external/data/",Class,".csv", sep=""))
BData.subset <- BData[c(GRF:(GRT*10)),]
BData.subset.active <- BData.subset[which(BData.subset$Rune != "Passive"),]
BData.subset.passive <- BData.subset[which(BData.subset$Rune == "Passive"),]
t <- data.frame(t(table(BData.subset.active$Spell)))
t$Var1 <- NULL
colnames(t) <- (c("Spell", "Count"))
t$Count <- as.integer(t$Count)
t <- t[order(t$Count, decreasing = T),]
t <- t[1:25,]
p1 <- ggplot(t, aes(x=reorder(Spell, -Count), y= Count))+
geom_bar(stat = "identity", fill = bcol, col = "black")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
xlab("Spell")+
ylab("Frequency")
return(p1)
}
plot1(1,100,"Monk")
shiny::runApp('GitHub/LadderStats/Shiny')
input$RankSlide[1] <- 1
input <- c()
input$RankSlide[1] <- 1
input$RankSlide[2] <- 500
plot1(input$RankSlide[1], input$RankSlide[2], input$ClassSelect
")
plot1(input$RankSlide[1], input$RankSlide[2], input$ClassSelect)
plot1(input$RankSlide[1], input$RankSlide[2], input$ClassSelect[1])
shiny::runApp('GitHub/LadderStats/Shiny')
plot1(1,100,"Barbarian")
Class
Class <- "Barbarian"
Class == "Barbarian"
plot1(1,100,Class)
Class <- "Monk"
plot1(1,100,Class)
shiny::runApp('GitHub/LadderStats/Shiny')
shiny::runApp('GitHub/LadderStats/Shiny')
#BData <- read.csv(paste("external/data/",Class,".csv", sep=""))
BData.subset <- BData[c(GRF:(GRT*10)),]
BData.subset.active <- BData.subset[which(BData.subset$Rune != "Passive"),]
BData.subset.passive <- BData.subset[which(BData.subset$Rune == "Passive"),]
t <- data.frame(t(table(BData.subset.active$Spell)))
t$Var1 <- NULL
colnames(t) <- (c("Spell", "Count"))
t$Count <- as.integer(t$Count)
t <- t[order(t$Count, decreasing = T),]
t <- t[1:25,]
p1 <- ggplot(t, aes(x=reorder(Spell, -Count), y= Count))+
geom_bar(stat = "identity", fill = bcol, col = "black")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
xlab("Spell")+
ylab("Frequency")
BData
if(Class == "Barbarian") {
bcol ="#DB3232"; BData <- bscv
} else if(Class == "Crusader") {
bcol ="#F2EEB1"; BData <- cscv
} else if(Class == "DemonHunter") {
bcol ="#B058AE"; BData <- dhscv
} else if(Class == "Monk") {
bcol ="#E3DE54"; BData <- mscv
} else if(Class == "WitchDoctor") {
bcol ="#279423"; BData <- wdscv
} else if(Class == "Wizard") {
;bcol ="#3BDCF5"; BData <- wscv
}
BData.subset <- BData[c(GRF:(GRT*10)),]
GRF <- 1
GRT <- 100
BData.subset <- BData[c(GRF:(GRT*10)),]
BData.subset.active <- BData.subset[which(BData.subset$Rune != "Passive"),]
BData.subset.passive <- BData.subset[which(BData.subset$Rune == "Passive"),]
p1 <- ggplot(t, aes(x=reorder(Spell, -Count), y= Count))+
geom_bar(stat = "identity", fill = bcol, col = "black")+
theme(axis.text.x = element_text(angle = 90, hjust = 1), panel.background = element_rect(fill = 'green', colour = 'red'))+
xlab("Spell")+
ylab("Frequency")
t <- data.frame(t(table(BData.subset.active$Spell)))
t$Var1 <- NULL
colnames(t) <- (c("Spell", "Count"))
t$Count <- as.integer(t$Count)
t <- t[order(t$Count, decreasing = T),]
t <- t[1:25,]
p1 <- ggplot(t, aes(x=reorder(Spell, -Count), y= Count))+
geom_bar(stat = "identity", fill = bcol, col = "black")+
theme(axis.text.x = element_text(angle = 90, hjust = 1), panel.background = element_rect(fill = 'green', colour = 'red'))+
xlab("Spell")+
ylab("Frequency")
p1
p1 <- ggplot(t, aes(x=reorder(Spell, -Count), y= Count))+
geom_bar(stat = "identity", fill = bcol, col = "black")+
theme(axis.text.x = element_text(angle = 90, hjust = 1), panel.background = element_rect(fill = 'black', colour = 'red'))+
xlab("Spell")+
ylab("Frequency")
p1
p1 <- ggplot(t, aes(x=reorder(Spell, -Count), y= Count))+
geom_bar(stat = "identity", fill = bcol, col = "black")+
theme(axis.text.x = element_text(angle = 90, hjust = 1), panel.background = element_rect(fill = 'black', colour = 'grea'))+
xlab("Spell")+
ylab("Frequency")
p1
p1 <- ggplot(t, aes(x=reorder(Spell, -Count), y= Count))+
geom_bar(stat = "identity", fill = bcol, col = "black")+
theme(axis.text.x = element_text(angle = 90, hjust = 1), panel.background = element_rect(fill = 'black', colour = 'gray'))+
xlab("Spell")+
ylab("Frequency")
p1
shiny::runApp('GitHub/LadderStats/Shiny')
p1 <- ggplot(t, aes(x=reorder(Spell, -Count), y= Count))+
geom_bar(stat = "identity", fill = bcol, col = "black")+
theme(axis.text.x = element_text(angle = 90, hjust = 1),
plot.background = element_rect(fill = 'black', colour = 'gray'),
panel.grid.major = element_line(colour = "gray"))+
xlab("Spell")+
ylab("Frequency")
p1
p1 <- ggplot(t, aes(x=reorder(Spell, -Count), y= Count))+
geom_bar(stat = "identity", fill = bcol, col = "black")+
theme(axis.text.x = element_text(angle = 90, hjust = 1),
plot.background = element_rect(fill = 'black', colour = 'gray'),
panel.background = element_rect(fill = 'black', colour = 'gray'),
panel.grid.major = element_line(colour = "gray"))+
xlab("Spell")+
ylab("Frequency")
p1
colour
p1 <- ggplot(t, aes(x=reorder(Spell, -Count), y= Count))+
geom_bar(stat = "identity", fill = bcol, col = "black")+
theme(axis.text.x = element_text(angle = 90, hjust = 1),
plot.background = element_rect(fill = 'black', colour = 'gray'),
panel.background = element_rect(fill = 'black', colour = 'gray'),
panel.grid.major = element_line(colour = 229))+
panel.grid.minor = element_line(colour = "gray"))+
xlab("Spell")+
ylab("Frequency")
p1
p1 <- ggplot(t, aes(x=reorder(Spell, -Count), y= Count))+
geom_bar(stat = "identity", fill = bcol, col = "black")+
theme(axis.text.x = element_text(angle = 90, hjust = 1),
plot.background = element_rect(fill = 'black', colour = 'gray'),
panel.background = element_rect(fill = 'black', colour = 'gray'),
panel.grid.major = element_line(colour = "#C1CDCD"))+
panel.grid.minor = element_line(colour = "gray"))+
xlab("Spell")+
ylab("Frequency")
p1
p1 <- ggplot(t, aes(x=reorder(Spell, -Count), y= Count))+
geom_bar(stat = "identity", fill = bcol, col = "black")+
theme(axis.text.x = element_text(angle = 90, hjust = 1),
plot.background = element_rect(fill = 'black', colour = 'gray'),
panel.background = element_rect(fill = 'black', colour = 'gray'),
panel.grid.major = element_line(colour = "#C1CDCD"))+
panel.grid.minor = element_line(colour = "gray"))+
xlab("Spell")+
ylab("Frequency")
p1
p1 <- ggplot(t, aes(x=reorder(Spell, -Count), y= Count))+
geom_bar(stat = "identity", fill = bcol, col = "black")+
theme(axis.text.x = element_text(angle = 90, hjust = 1),
plot.background = element_rect(fill = 'black', colour = 'gray'),
panel.background = element_rect(fill = 'black', colour = 'gray'),
panel.grid.major = element_line(colour = "#C1CDCD")+
panel.grid.minor = element_line(colour = "gray")+
xlab("Spell")+
ylab("Frequency")
p1
p1 <- ggplot(t, aes(x=reorder(Spell, -Count), y= Count))+
geom_bar(stat = "identity", fill = bcol, col = "black")+
theme(axis.text.x = element_text(angle = 90, hjust = 1),
plot.background = element_rect(fill = 'black', colour = 'gray'),
panel.background = element_rect(fill = 'black', colour = 'gray'),
panel.grid.major = element_line(colour = "#C1CDCD")
panel.grid.minor = element_line(colour = "gray"))+
xlab("Spell")+
ylab("Frequency")
p1
p1 <- ggplot(t, aes(x=reorder(Spell, -Count), y= Count))+
geom_bar(stat = "identity", fill = bcol, col = "black")+
theme(axis.text.x = element_text(angle = 90, hjust = 1),
plot.background = element_rect(fill = 'black', colour = 'gray'),
panel.background = element_rect(fill = 'black', colour = 'gray'),
panel.grid.major = element_line(colour = "#C1CDCD"),
panel.grid.minor = element_line(colour = "gray"))+
xlab("Spell")+
ylab("Frequency")
p1
p1 <- ggplot(t, aes(x=reorder(Spell, -Count), y= Count))+
geom_bar(stat = "identity", fill = bcol, col = "black")+
theme(axis.text.x = element_text(angle = 90, hjust = 1),
plot.background = element_rect(fill = 'black', colour = 'gray'),
panel.background = element_rect(fill = 'black', colour = 'gray'),
panel.grid.major = element_line(colour = "#E0EEEE"),
panel.grid.minor = element_line(colour = "#C1CDCD"))+
xlab("Spell")+
ylab("Frequency")
p1
p1 <- ggplot(t, aes(x=reorder(Spell, -Count), y= Count))+
geom_bar(stat = "identity", fill = bcol, col = "black")+
theme(axis.text.x = element_text(angle = 90, hjust = 1),
plot.background = element_rect(fill = 'black', colour = 'gray'),
panel.background = element_rect(fill = 'black', colour = 'gray'),
panel.grid.major = element_line(colour = "#E0EEEE"),
panel.grid.minor = element_line(colour = "#838B8B"))+
xlab("Spell")+
ylab("Frequency")
p1
p1 <- ggplot(t, aes(x=reorder(Spell, -Count), y= Count))+
geom_bar(stat = "identity", fill = bcol, col = "black")+
theme(axis.text.x = element_text(angle = 90, hjust = 1),
plot.background = element_rect(fill = 'black', colour = 'gray'),
panel.background = element_rect(fill = 'black', colour = 'gray'),
panel.grid.major = element_line(colour = "#C1CDCD"),
panel.grid.minor = element_line(colour = "#838B8B"))+
xlab("Spell")+
ylab("Frequency")
p1
?element_text
p1 <- ggplot(t, aes(x=reorder(Spell, -Count), y= Count))+
geom_bar(stat = "identity", fill = bcol, col = "black")+
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 12),
plot.background = element_rect(fill = 'black', colour = 'gray'),
panel.background = element_rect(fill = 'black', colour = 'gray'),
panel.grid.major = element_line(colour = "#C1CDCD"),
panel.grid.minor = element_line(colour = "#838B8B"))+
xlab("Spell")+
ylab("Frequency")
p1
p1 <- ggplot(t, aes(x=reorder(Spell, -Count), y= Count))+
geom_bar(stat = "identity", fill = bcol, col = "black")+
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 12, col = "#F0FFFF"),
plot.background = element_rect(fill = 'black', colour = 'gray'),
panel.background = element_rect(fill = 'black', colour = 'gray'),
panel.grid.major = element_line(colour = "#C1CDCD"),
panel.grid.minor = element_line(colour = "#838B8B"))+
xlab("Spell")+
ylab("Frequency")
p1
p1 <- ggplot(t, aes(x=reorder(Spell, -Count), y= Count))+
geom_bar(stat = "identity", fill = bcol, col = "black")+
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 12, colour = "#F0FFFF"),
plot.background = element_rect(fill = 'black', colour = 'gray'),
panel.background = element_rect(fill = 'black', colour = 'gray'),
panel.grid.major = element_line(colour = "#C1CDCD"),
panel.grid.minor = element_line(colour = "#838B8B"))+
xlab("Spell")+
ylab("Frequency")
p1
p1 <- ggplot(t, aes(x=reorder(Spell, -Count), y= Count))+
geom_bar(stat = "identity", fill = bcol, col = "black")+
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 12, colour = "#F0FFFF", face = "bold", hjust = 1),
plot.background = element_rect(fill = 'black', colour = 'gray'),
panel.background = element_rect(fill = 'black', colour = 'gray'),
panel.grid.major = element_line(colour = "#C1CDCD"),
panel.grid.minor = element_line(colour = "#838B8B"))+
xlab("Spell")+
ylab("Frequency")
p1
p1 <- ggplot(t, aes(x=reorder(Spell, -Count), y= Count))+
geom_bar(stat = "identity", fill = bcol, col = "black")+
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 12, colour = "#F0FFFF", face = "bold"),
plot.background = element_rect(fill = 'black', colour = 'gray'),
panel.background = element_rect(fill = 'black', colour = 'gray'),
panel.grid.major = element_line(colour = "#C1CDCD"),
panel.grid.minor = element_line(colour = "#838B8B"))+
xlab("Spell")+
ylab("Frequency")
p1
shiny::runApp('GitHub/LadderStats/Shiny')
shiny::runApp('GitHub/LadderStats/Shiny')
shiny::runApp('GitHub/LadderStats/Shiny')
shiny::runApp('GitHub/LadderStats/Shiny')
shiny::runApp('GitHub/LadderStats/Shiny')
shiny::runApp('GitHub/LadderStats/Shiny')
shiny::runApp('GitHub/LadderStats/Shiny')
shiny::runApp('GitHub/LadderStats/Shiny')
shiny::runApp('GitHub/LadderStats/Shiny')
?theme
?axis.title.x
axis.title.x
shiny::runApp('GitHub/LadderStats/Shiny')
shiny::runApp('GitHub/LadderStats/Shiny')
shiny::runApp('GitHub/LadderStats/Shiny')
?selectInput
shiny::runApp('GitHub/LadderStats/Shiny')
shiny::runApp('GitHub/LadderStats/Shiny')
shiny::runApp('GitHub/LadderStats/Shiny')
shiny::runApp('GitHub/LadderStats/Shiny')
shiny::runApp('GitHub/LadderStats/Shiny')
shiny::runApp('GitHub/LadderStats/Shiny')
t
t[1:6]
t[1:6,1]
mscv
mscv[which(mscv$Spell == runes),2]
runes <- t[1:6,1]
mscv[which(mscv$Spell == runes),2]
mscv[which(mscv$Spell == runes),c(1,2)]
head(mscv)
mscv[which(mscv$Spell == runes),c(2,3)]
runes <- mscv[which(mscv$Spell == runes),c(2,3)]
table(runes)
runes <- t[1:6,1]
runes
runes <- mscv[which(mscv$Spell == spells),c(2,3)]
spells <- t[1:6,1]
runes <- mscv[which(mscv$Spell == spells),c(2,3)]
?table
table(runes, runes$Spell)
runes
runes$Spell
table(runes, runes$Rune)
head(runes)
runes <- runes[1:20,]
runes
table(runes, runes$Rune)
table(x = runes, runes$Rune)
table(runes$Rune, runes)
spells
runes <- mscv[which(mscv$Spell == spells[1]),c(2,3)]
runes
table(runes[2])
runes <- mscv[which(mscv$Spell == spells[1]),c(2,3)]
runes <- runes[1:20,]
table(runes[2])
runes <- mscv[which(mscv$Spell == spells[1]),c(2,3)]
str(runes)
factor(runes[2])
runes
factor(runes[,3])
factor(runes[,2])
runes[,2] <- factor(runes[,2])
table(runes[2])
i <- 1
data.frame(t(table(runes[2])))
runes <- data.frame(t(table(runes[2])))
i <- 1
runes.subset <- mscv[which(mscv$Spell == spells[i]),c(2,3)]
runes.subset <- runes.subset[1:20,]
factor(runes.subset[,2])
runes.subset[,2] <- factor(runes.subset[,2])
runes <- data.frame(t(table(runes[2])))
runes
runes.subset <- mscv[which(mscv$Spell == spells[i]),c(2,3)]
runes.subset
runes.subset <- runes.subset[1:20,]
runes.subset
runes.subset <- mscv[which(mscv$Spell == spells[i]),c(2,3)]
factor(runes.subset[,2])
runes.subset <- mscv[which(mscv$Spell == spells[i]),c(2,3)]
runes.subset[,2] <- factor(runes.subset[,2])
runes <- data.frame(t(table(runes[2])))
runes
runes.subset <- mscv[which(mscv$Spell == spells[i]),c(2,3)]
runes.subset[,2] <- factor(runes.subset[,2])
runes <- data.frame(t(table(runes.subset[2])))
runes
runes <- data.frame(NA)
data.frame(t(table(runes.subset[2])))
runes <- data.frame(t(table(runes.subset[2])))[,2:]
data.frame(t(table(runes.subset[2])))[,2:3]
runes.subset <- data.frame(t(table(runes.subset[2])))[,2:3]
runes <- runes.subset[order(runes.subset$Freq, decreasing T),]
order(runes.subset$Freq, decreasing T)
runes <- runes.subset[order(runes.subset$Freq, decreasing = T),]
runes
runes <- data.frame(NA)
runes[1:6,i] <- runes.subset[order(runes.subset$Freq, decreasing = T),]
runes[c(1:6),i] <- runes.subset[order(runes.subset$Freq, decreasing = T),]
runes[c(1:5),i] <- runes.subset[order(runes.subset$Freq, decreasing = T),]
for (i in 1:6) {
runes.subset <- mscv[which(mscv$Spell == spells[i]),c(2,3)]
runes.subset[,2] <- factor(runes.subset[,2])
runes.subset <- data.frame(t(table(runes.subset[2])))[,2:3]
runes[c(1:5),i] <- runes.subset[order(runes.subset$Freq, decreasing = T),]
}
runes <- list(list())
runes <- list(list())
for (i in 1:6) {
runes.subset <- mscv[which(mscv$Spell == spells[i]),c(2,3)]
runes.subset[,2] <- factor(runes.subset[,2])
runes.subset <- data.frame(t(table(runes.subset[2])))[,2:3]
runes[i] <- runes.subset[order(runes.subset$Freq, decreasing = T),]
}
for (i in 1:6) {
runes.subset <- mscv[which(mscv$Spell == spells[i]),c(2,3)]
runes.subset[,2] <- factor(runes.subset[,2])
runes.subset <- data.frame(t(table(runes.subset[2])))[,2:3]
runes[i] <- list(runes.subset[order(runes.subset$Freq, decreasing = T),])
}
runes
plot(runes[[1]])
barplot(runes[[1]])
for (i in 1:6) {
runes.subset <- mscv[which(mscv$Spell == spells[i]),c(2,3)]
runes.subset[,2] <- factor(runes.subset[,2])
runes.subset <- data.frame(t(table(runes.subset[2])))[,2:3]
runes[i] <- list(runes.subset[order(runes.subset$Freq, decreasing = T),])
colnames(runes[[i]]) <- c(t[i], "Frequency")
}
for (i in 1:6) {
runes.subset <- mscv[which(mscv$Spell == spells[i]),c(2,3)]
runes.subset[,2] <- factor(runes.subset[,2])
runes.subset <- data.frame(t(table(runes.subset[2])))[,2:3]
runes[i] <- list(runes.subset[order(runes.subset$Freq, decreasing = T),])
colnames(runes[[i]]) <- c("Rune", "Frequency")
}
runes
ggplot(data = runes[[1]])
ggplot(data = runes[[1]]) + geom_bar()
f <- runes[[1]]
f
ggplot(data = f, aes(f$Rune, y = f$Frequency)) + geom_bar(stat = "identity") + coord_flip()
ggplot(data = f, aes(x = reorder(f$Rune, - f$Frequency), y = f$Frequency)) + geom_bar(stat = "identity") + coord_flip()
ggplot(data = f, aes(x = reorder(f$Rune, - f$Frequency), y = f$Frequency)) + geom_bar(stat = "identity", position = "stacked") + coord_flip()
ggplot(data = f, aes(x = reorder(f$Rune, - f$Frequency), y = f$Frequency)) + geom_bar(stat = "identity", position = "stack") + coord_flip()
ggplot(data = f, aes(x = reorder(f$Rune, - f$Frequency), y = f$Frequency), fill = factor(f$Rune)) + geom_bar(stat = "identity", position = "stack") + coord_flip()
ggplot(data = f, aes(x = reorder(f$Rune, - f$Frequency), y = f$Frequency), fill = factor(f$Rune)) + geom_bar(stat = "identity", position = "stack") + coord_flip()
ggplot(data = f, aes(x = reorder(f$Rune, - f$Frequency), y = f$Frequency)) + geom_bar(stat = "identity", position = "stack", fill = factor(f$Rune)) + coord_flip()
ggplot(data = f, aes(x = reorder(f$Rune, - f$Frequency), y = f$Frequency)) + geom_bar(stat = "identity", position = "stack", fill = f$Rune) + coord_flip()
ggplot(data = f, aes(x = reorder(f$Rune, - f$Frequency), y = f$Frequency), fill = f$Rune) + geom_bar(stat = "identity", position = "stack") + coord_flip()
shiny::runApp('GitHub/LadderStats/Shiny')
if (!require("devtools"))
install.packages("devtools")
devtools::install_github("rstudio/shinyapps")
shiny::runApp('GitHub/LadderStats/Shiny')
shiny::runApp('GitHub/LadderStats/Shiny')
shiny::runApp('GitHub/LadderStats/Shiny')
shiny::runApp('GitHub/LadderStats/Shiny')
shiny::runApp('GitHub/LadderStats/Shiny')
shiny::runApp('GitHub/LadderStats/Shiny')
